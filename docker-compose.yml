version: "3"

services:
  authom-proxy:
    container_name: authom-proxy
    build: .
    ports:
      - "8001:3000"
    env_file:
      - .env
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-proxy.rule=Host(`localhost`) && PathPrefix(`/auth`)"
      - "traefik.http.services.auth-proxy.loadbalancer.server.port=3000"

  traefik:
    image: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
      - "--accesslog"
      - "--accesslog.fields.headers.defaultmode=keep"
      - "--accesslog.fields.headers.names.host=keep"
    ports:
      - "3000:80"
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-public
    labels:
      - "traefik.http.middlewares.auth-middleware.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.middlewares.auth-middleware.forwardauth.authResponseHeadersRegex=X-.*"
      - "traefik.http.middlewares.auth-middleware.forwardauth.address=http://authom-proxy:3000/auth/login"
      - "traefik.http.routers.auth.middlewares=auth-middleware"

  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.middlewares=auth-middleware"

    networks:
      - traefik-public

networks:
  traefik-public:
